@use '../colors' as colors;
@use '../mixins' as mixins;

@mixin createButton($main: colors.$brand-primary,
  $text: colors.$text-primary,
  $border: transparent) {
  @include mixins.transition();

  background: $main;
  color: $text;
  border: 1px solid $border;

  text-decoration: unset;
  --font-size: .75rem;
  font-size: var(--font-size);

  padding: .5em 1em;
  max-height: calc(var(--font-size) + 1.25em);
  border-radius: .5em;
  text-align: center;

  display: flex;
  align-items: center;
  justify-content: center;

  &:hover:not(:disabled) {
    $background: lighten($main, 3%);
    $color: darken($text, 3%);

    background: $background;
    color: $color;
    box-shadow: 0 0 1em rgba(0, 0, 0, .3);
    cursor: pointer;
  }

  &:disabled {
    color: var(--text-muted);
    border-color: var(--text-muted);
    cursor: not-allowed;

    &:not(.secondary, .tertiary) {
      background-color: var(--main-tertiary);
    }
  }
}

button,
.button,
[type=button],
[type=submit] {
  @include createButton();

  &.alt {
    @include createButton(colors.$brand-alt);
  }

  &[data-crud=update] {
    @include createButton(colors.$crud-update);
  }

  &.secondary {
    @include createButton(transparent,
      colors.$brand-secondary,
      colors.$brand-secondary);

    &.alt {
      @include createButton(transparent,
        colors.$brand-alt,
        colors.$brand-alt);
    }

    &[data-crud=delete] {
      @include createButton(transparent,
        colors.$crud-delete,
        colors.$crud-delete);
    }
  }

  &.tertiary {
    @include createButton(colors.$background-tertiary);

    &:hover {
      box-shadow: unset !important;
      background-color: transparent !important;
      text-decoration: underline;
    }
  }
}

.button-container {
  display: flex;
  justify-content: flex-end;
  gap: 1ch;
  align-items: center;

  &.reverse {
    flex-direction: row-reverse;
    margin-left: auto;
  }
}